type Message @entity {
  id: ID!
  ethAddress: String!
  subAddress: String!
  token: Bytes!
  amount: BigInt!
  status: Status!
  direction: Direction!
  ethBlockNumber: BigInt
}

type BridgeMessage @entity {
  id: ID!
  action: BridgeMessageAction!
  sender: String
  status: Status!
  ethBlockNumber: BigInt!
}

type AccountMessage @entity {
  id: ID!
  action: AccountMessageAction!
  direction: Direction!
  ethAddress: String
  subAddress: String
  timestamp: BigInt!
  ethBlockNumber: BigInt!
}

type Account @entity {
  id: ID!
  messageID: String!
  kind: AccountKind!
  status: AccountStatus!
  timestamp: BigInt!
  ethBlockNumber: BigInt!
}

type LimitMessage @entity {
  id: ID!
  minHostTransactionValue: BigInt!
  maxHostTransactionValue: BigInt!
  dayHostMaxLimit: BigInt!
  dayHostMaxLimitForOneAddress: BigInt!
  maxHostPendingTransactionLimit: BigInt!
  minGuestTransactionValue: BigInt!
  maxGuestTransactionValue: BigInt!
  dayGuestMaxLimit: BigInt!
  dayGuestMaxLimitForOneAddress: BigInt!
  maxGuestPendingTransactionLimit: BigInt!
  ethBlockNumber: BigInt!
}

type Limit @entity {
  id: ID!
  kind: LimitKind!
  value: BigInt!
  messageID: String!
  ethBlockNumber: BigInt!
}

type LimitProposal @entity {
  id: ID!
  ethAddress: String!
  status: ProposalStatus!
  minHostTransactionValue: BigInt!
  maxHostTransactionValue: BigInt!
  dayHostMaxLimit: BigInt!
  dayHostMaxLimitForOneAddress: BigInt!
  maxHostPendingTransactionLimit: BigInt!
  minGuestTransactionValue: BigInt!
  maxGuestTransactionValue: BigInt!
  dayGuestMaxLimit: BigInt!
  dayGuestMaxLimitForOneAddress: BigInt!
  maxGuestPendingTransactionLimit: BigInt!
  ethBlockNumber: BigInt!
}

type CandidateValidatorMessage @entity {
  id: ID!
  ethAddress: String!
  subAddress: String!
  action: CandidateValidatorMessageAction!
  ethBlockNumber: BigInt!
}

type CandidateValidator @entity {
  id: ID!
  subAddress: String!
  active: Boolean!
  ethBlockNumber: BigInt!
}

type CandidatesValidatorsProposal @entity {
  id: ID!
  status: ProposalStatus!
  hosts: [String!]!
  ethBlockNumber: BigInt!
}

type ValidatorsListMessage @entity {
  id: ID!
  newValidators: [String!]!
  newHowManyValidatorsDecide: BigInt!
  ethBlockNumber: BigInt!
}

enum Status {
  PENDING
  WITHDRAW
  APPROVED
  CANCELED
  CONFIRMED
  CONFIRMED_WITHDRAW
}

enum Direction {
  ETH2SUB
  SUB2ETH
}

enum BridgeMessageAction {
  STOP
  START
  PAUSE
  RESUME
}

enum AccountMessageAction {
  PAUSE
  RESUME
}

enum AccountKind {
  ETH
  SUB
}

enum AccountStatus {
  ACTIVE
  BLOCKED
}

enum ProposalStatus {
  PENDING
  APPROVED
  DECLINED
}

enum CandidateValidatorMessageAction {
  ADD
  REMOVE
}

enum LimitKind {
  MIN_HOST_TRANSACTION_VALUE
  MAX_HOST_TRANSACTION_VALUE
  DAY_HOST_MAX_LIMIT
  DAY_HOST_MAX_LIMIT_FOR_ONE_ADDRESS
  MAX_HOST_PENDING_TRANSACTION_LIMIT
  MIN_GUEST_TRANSACTION_VALUE
  MAX_GUEST_TRANSACTION_VALUE
  DAY_GUEST_MAX_LIMIT
  DAY_GUEST_MAX_LIMIT_FOR_ONE_ADDRESS
  MAX_GUEST_PENDING_TRANSACTION_LIMIT
}
